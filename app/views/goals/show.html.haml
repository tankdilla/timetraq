%p#notice= notice

- if @goal.goal_type == "project-based"
  %b Project:
  = link_to @goal.project.name, [@goal.user, @goal.project]

%p
  %b Objective:
  = @goal.name

- if !@goal.notes.blank?
  %p
    %b Additional notes:
    = @goal.notes

/ %p
/   %b Objective started on:
/   = format_date(@goal.started_on || Date.today)

/ - if !@goal.target_completion_date.blank?
/   %p
/     %b Target completion date:
/     = @goal.target_completion_date

%p
  %b Objective Type:
  = @goal.goal_type
- if @goal.goal_type == "recurring"
  %p
    Objective checked every
    = @goal.goal_frequency
    = @goal.goal_frequency_unit

- if !@goal.goal_amount_score.blank?
  %p
    Objective Score:
    = @goal.goal_amount_score
  %p
    Current Score:
    = @goal.current_score
  - unless @goal.current_score >= @goal.goal_amount_score.to_i
    You need 
    = @goal.goal_amount_score.to_i - @goal.current_score
    point(s) to reach your goal.
  - else
    %h3
      Objective has been met!
    
- elsif !@goal.goal_amount_duration.blank?
  %p
    Objective Duration:
    = @goal.goal_amount_duration
    = @goal.goal_amount_unit

- unless @tracked_activities.empty?  
  %p
    Currently tracking activities:
    %ul
      - @tracked_activities.each do |a|
        = link_to a.description, [a.user, a]
        - unless a.entries.empty?
          %br
          = render :partial => 'entries/list_entries', :locals=>{:entries=>a.entries}
%p
  Create an 
  = link_to 'activity', new_user_activity_path(@user, :goal_id=>@goal.id)
  tied to your objective.

= link_to 'Home', user_path(@user)
\|
= link_to 'Edit', edit_user_goal_path(@user, @goal)
\|
= link_to 'Back to Objectives', user_goals_path(@user)
-if !@goal.project.nil?
  \|
  = link_to 'Back to Project', user_project_path(@user, @goal.project)
\|
= link_to 'Add Activity', new_user_activity_path(@user, :goal_id=>@goal.id)
\|
= link_to 'Mark/Unmark Objective as Completed', edit_user_goal_path(@user, @goal, :completed=>true)
\|
= link_to 'Delete Objective', [@user, @goal], :confirm => 'Are you sure?', :method => :delete
